exclude: '^$'
fail_fast: false
default_install_hook_types: [pre-commit, pre-push, commit-msg]

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
        stages: [pre-commit]
      - id: check-ast
        stages: [pre-commit]
      - id: check-docstring-first
        stages: [pre-commit]
      - id: check-json
        stages: [pre-commit]
      - id: check-toml
        stages: [pre-commit]
      - id: check-yaml
        args: [--allow-multiple-documents]
        stages: [pre-commit]
      - id: check-xml
        stages: [pre-commit]
      - id: check-shebang-scripts-are-executable
        stages: [pre-commit]
      - id: check-executables-have-shebangs
        stages: [pre-commit]
      - id: check-merge-conflict
        stages: [pre-commit]
      - id: check-case-conflict
        stages: [pre-commit]
      - id: check-symlinks
        stages: [pre-commit]
      - id: destroyed-symlinks
        stages: [pre-commit]
      - id: detect-private-key
        stages: [pre-commit]
      - id: mixed-line-ending
        exclude: "(^.idea/|.vscode/)"
        stages: [pre-commit]
      - id: trailing-whitespace
        exclude: "(^.idea/|.vscode/)"
        stages: [pre-commit]
      - id: end-of-file-fixer
        exclude: "(^.idea/|.vscode/)"
        stages: [pre-commit]
      - id: no-commit-to-branch
        args: [--branch, main]
        stages: [pre-commit]

  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.12
        args: [--line-length=120]
        exclude: ^.*\b(migrations)\b.*$
        stages: [pre-commit]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        exclude: ^.*\b(migrations)\b.*$
        stages: [pre-commit]

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        exclude: ^.*\b(migrations)\b.*$
        stages: [pre-commit]
        additional_dependencies:
          # automated security testing
          - flake8-bandit

          # do not allow breaking lines with backslashes
          - flake8-broken-line

          # check for built-ins being used as variables or parameters
          - flake8-builtins

          # "find likely bugs and design problems in your program"
          - flake8-bugbear

          # write better comprehensions
          - flake8-comprehensions

          # catch bugs from implicit concat
          - flake8-no-implicit-concat

          # attempt to simplify code
          - flake8-simplify

          # validate names of things
          - pep8-naming

  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    hooks:
      - id: poetry-check
        stages: [pre-commit]

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.1.0
    hooks:
      - id: commitizen
      - id: commitizen-branch
        stages: [pre-push]
